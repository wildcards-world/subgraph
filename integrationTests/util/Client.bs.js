// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Dotenv = require("dotenv");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var ApolloClient = require("rescript-apollo-client/src/ApolloClient.bs.js");
var ApolloClient__Core_ApolloClient = require("rescript-apollo-client/src/@apollo/client/core/ApolloClient__Core_ApolloClient.bs.js");
var ApolloClient__Link_Http_HttpLink = require("rescript-apollo-client/src/@apollo/client/link/http/ApolloClient__Link_Http_HttpLink.bs.js");
var ApolloClient__Cache_InMemory_InMemoryCache = require("rescript-apollo-client/src/@apollo/client/cache/inmemory/ApolloClient__Cache_InMemory_InMemoryCache.bs.js");

((require('isomorphic-fetch')));

Dotenv.config();

var graphApiEndpoint = Belt_Option.getWithDefault(process.env.GRAPH_API_ENDPOINT, "http://127.0.0.1:8000/subgraphs/name/wildcards-world/wildcards-mumbai");

var httpLink = ApolloClient__Link_Http_HttpLink.make((function (param) {
        return graphApiEndpoint;
      }), undefined, Caml_option.some(fetch), undefined, undefined, undefined, undefined, undefined);

var instance = ApolloClient.make(undefined, undefined, undefined, Caml_option.some(httpLink), ApolloClient__Cache_InMemory_InMemoryCache.make(undefined, undefined, undefined, undefined, undefined, undefined), undefined, undefined, true, undefined, ApolloClient__Core_ApolloClient.DefaultOptions.make(ApolloClient__Core_ApolloClient.DefaultMutateOptions.make(undefined, undefined, true, /* All */2, undefined, undefined), ApolloClient__Core_ApolloClient.DefaultQueryOptions.make(/* NetworkOnly */2, /* All */2, undefined, undefined), ApolloClient__Core_ApolloClient.DefaultWatchQueryOptions.make(/* NetworkOnly */3, /* All */2, undefined, undefined), undefined), undefined, undefined, undefined, undefined, undefined, undefined, undefined);

var graphqlEndpoint = "localhost:4000";

exports.graphqlEndpoint = graphqlEndpoint;
exports.graphApiEndpoint = graphApiEndpoint;
exports.httpLink = httpLink;
exports.instance = instance;
/*  Not a pure module */
